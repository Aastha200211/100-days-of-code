class Solution:
    def minMutation(self, startGene: str, endGene: str, bank: List[str]) -> int:
        bank = set(bank)  
        if endGene not in bank:
            return -1
            
        genes = ['A', 'C', 'G', 'T']
        
        q = deque([(startGene, 0)])
        visited = set([startGene])

        while q:
            gene, steps = q.popleft()
            if gene == endGene:
                return steps
                
            for i in range(len(gene)):
                for g in genes:
                    if gene[i] == g: 
                        continue
                    mutated = gene[:i] + g + gene[i+1:]
                    if mutated in bank and mutated not in visited:
                        visited.add(mutated)
                        q.append((mutated, steps + 1))

        return -1
        
