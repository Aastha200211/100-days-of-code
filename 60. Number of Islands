from collections import deque
from typing import List

class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if not grid:
            return 0
        rows, col = len(grid), len(grid[0])
        visit = set()
        islands = 0

        def bfs(r, c):
            q = deque([(r, c)])
            visit.add((r, c))
            
            while q:
                cur_row, cur_col = q.popleft()   # âœ… renamed
                directions = [[1,0], [-1,0], [0,1], [0,-1]]
                for dr, dc in directions:
                    nr, nc = cur_row + dr, cur_col + dc
                    if (nr in range(rows) and nc in range(col) and
                        (nr, nc) not in visit and grid[nr][nc] == "1"):
                        q.append((nr, nc))
                        visit.add((nr, nc))

        for r in range(rows):
            for c in range(col):
                if grid[r][c] == "1" and (r, c) not in visit:
                    bfs(r, c)
                    islands += 1
        return islands
